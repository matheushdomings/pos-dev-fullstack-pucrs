   # 5.1. Estabelecer conexão SSH com a instância EC2
  #  - name: Set up SSH
  #    run: |
   #     mkdir -p ~/.ssh
    #    echo ${{ secrets.SSH_PRIVATE_KEY }}  > ~/.ssh/id_rsa
     #   chmod 600 ~/.ssh/id_rsa

    # 6. Fazer o deploy
    - name: Deploy to server via SSH
      uses: appleboy/ssh-action@v0.1.0  # Action para SSH
      with:
        host: ${{ secrets.HOST }}  # Defina isso no repositório em Secrets
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}  # Defina a chave SSH no Secrets
        port: 22
        script: |
          cd ./aula || git clone https://github.com/cassiowt/nodepipeline-devops.git
          cd nodepipeline-devops
          git pull origin main  # Ou outro comando para atualizar o código
          npm install
          pm2 restart app  # Exemplo para reiniciar a aplicação Node.js com PM2

ame: Deploy to EC2 on AWS

on:
  push:
    branches:
      - main  # Substitua por sua branch principal

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    # 1. Checkout do código
    - name: Checkout code
      uses: actions/checkout@v2

    # 2. Configurar AWS CLI
     - name: Set up AWS CLI
       run: |
       aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
       aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       aws configure set region us-east-1  # Altere para sua região
  
    
    # 3. Estabelecer conexão SSH com a instância EC2
    - name: Set up SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
    
    # 4. Copiar os arquivos para a EC2
    - name: Deploy to EC2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          cd ./aula || git clone https://github.com/cassiowt/nodepipeline-devops.git
          cd nodepipeline-devops
          git pull origin main
          npm install  # Ou o comando adequado para seu projeto
          pm2 restart app || pm2 start server.js  # Caso utilize PM2 para gerenciamento de processos
        EOF

    # 5. (Opcional) Verificação ou testes pós-deploy
    - name: Verify Deploy
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} "curl http://localhost:3000"  # Altere conforme sua aplicação
